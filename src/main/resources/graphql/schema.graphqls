type Query {
    helloWorld: String!
    parametrizedQuery(firstArgument: String!, secondArgument: String): String!
    message: Message!
    someArray: [Int!]!
    authors: [Author]!
    recentPost(count: Int!, offset: Int!) : [Post]!
}

type Mutation {
    createAuthor(author: AuthorInput!): ID!
    createPost(post: PostInput): ID!
}

input PostInput {
    title: String!
    description: String!
    category: String!
    authorId: ID!

}

input AuthorInput{
    name: String!
    email: String!
}

type Message {
    id: ID!
    text: String!
}

type Author {
    id: ID!
    name: String!
    email: String!
    posts: [Post]!
}

type Post {
    id: ID!
    title: String!
    description: String!
    category: String!
    author: Author!
}